Zdefiniuj prostą klasę abstrakcyjną Figura, która zawiać będzie:
- informacje o położeniu na ekranie (dwie współrzędne typu double).
- setery i getery położenia.
- czysto wirtualne metody do wyznaczania pola powierzchni i obwodu figury.
Wskazówki: Pamiętaj, że jeśli choć jedna metoda klasy jest czysto wirtualna to nie
ma ona implementacji. Taka klasa z automatu stanie się klasą abstrakcyjną i nie
będzie zatem można tworzyć samodzielnej instancji tej klasy w programie. Dla metod
czysto wirtualnych nie definiujemy ciała i musimy ich prototyp oznaczyć w specyficzny sposób. Położenie możesz przechowywać w strukturze.
■ Zdefiniuj klasy: Koło, Prostokąt i Trójkąt jako klasy pochodne od klasy figura.
Dodaj do nich minimum potrzebnej informacji koniecznej do wyliczenia dla nich pól
powierzchni i obwodów.
Wskazówki: Zastanów się co jest potrzebne, aby dało się policzyć wskazane cechy
geometryczne tych figur. Staraj się stosować opis najprostszy jak się da, ale pamiętaj, aby wszystkie dane były typów rzeczywistych.
■ Dla każdej klasy pochodnej zdefiniuj interfejs (setery, getery) oraz konstruktory argumentowe (jawnie wyklucz domyślne).
Wskazówki: Zwróć uwagę, aby w konstruktorach klas pochodnych (na liście inicjalizacyjnej) zawsze wskazywać który konstruktor klasy bazowej ma być użyty.
■ Dodaj finalną klasę Kwadrat jako pochodną od Prostokąta. Korzystając z wyjątków
od typu dziedziczenia i/lub dziedziczenia niepublicznego, tak odziedzicz interfejs
klasy bazowej, aby w klasie pochodnej nie było zbędnych metod.
Wskazówki: Zauważ, że kwadrat jest szczególnym typem prostokąta, ale do jego opisu
potrzeba mniej informacji. Jeśli zatem do ustawienia parametrów geometrycznych
prostokąta potrzebne były setery i etery obu boków, tak w kwadracie wystarczą tylko te jednego boku. To jest ważne, aby nie dało się dla kwadratu ustawiać danych,
których on nie używa, a które dostaliśmy mimowolnie z klasy bazowej.
■ Dla każdej z klas pochodnych zdefiniuj właściwe wersje metod obliczających pola
powierzchni i obwody.
Wskazówki: Koniecznie pamiętaj o specyfikatorze override, aby upewnić się, że zdefiniowane metody na pewno przeciążaj metodę wirtualną.
Opracowanie: dr inż. Łukasz Maliński i mgr inż. Błażej Nycz, Politechnika Śląska, 2024
■ Dla całej hierarchii klas dodaj funkcjonalność zliczania i odczytywania, ile
jest wszystkich figur w programie. Zadbaj, aby żadna figura nie była liczona więcej niż jeden raz.
Wskazówki: To jest w zasadzie powtórzenie materiału z poprzedniego tematu. Ważne
jest by się zastanowić, w których konstruktorach i destruktorach należy umieścić
inkrementacje i dekrementacje licznika. Tak, potrzebny jest tylko jeden licznik,
gdyż interesuje nas liczba wszystkich figur bez podziału na ich typy szczegółowe.
Pamiętaj, że każda klasa pochodna od klasy Figura, jest figurą.
■ Napisz krótki program, w którym zdefiniuj taką tablicę 10 elementów, aby dało
się w niej przechować dowolny typ pochodny od Figury. Poprzepisuj do niej instancje różnych figur geometrycznych o rożnych parametrach. Na koniec policz sumaryczne pole wszystkich figur zebranych w tej tablicy.
